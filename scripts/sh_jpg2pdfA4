#!/bin/bash
#############################################################################################
###########                                                                       ###########
######                                                                                 ######
##                                                                                         ##
# \author       Luciano Augusto Kruk                                                        #
# \web          www.kruk.eng.br                                                             #
#                                                                                           #
# \description  This script converts a JPG picture into a PDF file with A4 page size.       #
#               If the pdf-file argument is not provided, the script creates a file         #
#               with name similar to the input jpg file.                                    #
#                                                                                           #
# \copyright    Please keep this head when you distribute this script.                      #
##                                                                                         ##
######                                                                                 ######
###########                                                                       ###########
#############################################################################################


fn_usage() {
    name=`basename "$0"`
    echo
    echo "Usage:"
    echo
    echo "   $name  [-s|-c] <jpg-file>  [pdf-file]"
    echo
    echo " Arguments:"
    echo "   -s     enable shadowing of the source file"
    echo "   -c     enable shadowing with colors of the source file"
    echo
}

apps=( 'sh_uniqfile' 'sh_IM_shadow' )
for app in ${apps[@]};
do
    [ "`which ${app}`x" = "x" ] && { echo "ERR: application '${app}' not found. Aborting..."; exit -1; }
done

#######################
## Argument Parsing: ##
#######################
defans="NOK_485734985734985734059783049583049583409538"
shadow=${defans}
colors=${defans}
inputfile=${defans}
outfile=${defans}

while [ ${OPTIND} -le "$#" ]; do
    if getopts "hsc" opt; then
        case ${opt} in
            h)
                fn_usage
                exit 0
                ;;
            c)
                colors=1
                ;;
            s)
                shadow=1
                ;;
            \?)
                echo "Invalid option: -${OPTARG}" >&2
                fn_usage
                exit -1
                ;;
            :)
                echo "Option -${OPTARG} requires an argument." >&2
                fn_usage
                exit -1
                ;;
        esac
    else
        # the inputfile was alread selected?
        if [ "${inputfile}" == ${defans} ]; then
            inputfile="${!OPTIND}"
            [[ ! -e "${inputfile}" ]] && { echo "Input file '${inputfile}' not found. Aborting ..."; exit -1; }
        else
            outfile="${!OPTIND}"
        fi
        ((OPTIND++))
    fi
done

# any input file?
[[ "${inputfile}" == ${defans} ]] && { echo "Incorrent number of input arguments. Aborting ..."; fn_usage; exit -1; }

# any selected output?
if [ "${outfile}" == "${defans}" ]; then
    if [ `echo "${inputfile}" | grep -c "\.[[:alnum:]]\{1,3\}$"` -gt 0 ]; then
        outfile="`echo \"${inputfile}\" | sed 's/\.[[:alnum:]]\{1,3\}$/.pdf/'`"
        echo "outfile = ${outfile}"
    else
        outfile="`echo \"${inputfile}\" | sed 's/$/.pdf/'`"
        echo "outfile = ${outfile}"
    fi
fi

# shadowing?
if [ ${shadow} == "1" ]; then
    tmp=`sh_uniqfile -f /tmp/`-shadow.jpg
    if [ ${colors} == "1" ]; then
        sh_IM_shadow -c "${inputfile}" "${tmp}"
    else
        sh_IM_shadow "${inputfile}" "${tmp}"
    fi
    inputfile=${tmp}
fi

# convert!!

unit=PixelsPerInch
dens=150
dens=300
pagesize=$((dens*827/100))x$((dens*1169/100))

echo "[sh_jpg2pdfA4] inputfile = ${inputfile}"
echo "[sh_jpg2pdfA4] outfile   = ${outfile}"

convert "${inputfile}" -compress jpeg -quality 100                \
    -resize $pagesize -gravity center -extent $pagesize \
    -repage $pagesize -units $unit -density ${dens}x${dens} "${outfile}"

#############################################################################################
